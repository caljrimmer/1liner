{"id":"node_modules/lodash.mean/index.js","dependencies":[{"name":"/Users/callumrimmer/Documents/sites/playground/1liner/package.json","includedInParent":true,"mtime":1604671128394},{"name":"/Users/callumrimmer/Documents/sites/playground/1liner/node_modules/lodash.mean/package.json","includedInParent":true,"mtime":1580929885996}],"generated":{"js":"/**\n * lodash 4.1.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/**\n * The base implementation of `_.mean` and `_.meanBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the mean.\n */\nfunction baseMean(array, iteratee) {\n  var length = array ? array.length : 0;\n  return length ? (baseSum(array, iteratee) / length) : NAN;\n}\n\n/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\n/**\n * This method returns the first argument given to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Computes the mean of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the mean.\n * @example\n *\n * _.mean([4, 2, 8, 6]);\n * // => 5\n */\nfunction mean(array) {\n  return baseMean(array, identity);\n}\n\nmodule.exports = mean;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash.mean/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/lodash.mean/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}}],"sources":{"node_modules/lodash.mean/index.js":"/**\n * lodash 4.1.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/**\n * The base implementation of `_.mean` and `_.meanBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the mean.\n */\nfunction baseMean(array, iteratee) {\n  var length = array ? array.length : 0;\n  return length ? (baseSum(array, iteratee) / length) : NAN;\n}\n\n/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\n/**\n * This method returns the first argument given to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Computes the mean of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the mean.\n * @example\n *\n * _.mean([4, 2, 8, 6]);\n * // => 5\n */\nfunction mean(array) {\n  return baseMean(array, identity);\n}\n\nmodule.exports = mean;\n"},"lineCount":89}},"error":null,"hash":"63044446a6da01babeca43f74dfaef96","cacheData":{"env":{}}}